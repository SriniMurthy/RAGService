# Test-specific configuration for integration tests
# This profile optimizes for rate limiting and test performance

# Server configuration
server.servlet.context-path=/RAG

# Use test database to avoid polluting dev data
spring.datasource.url=jdbc:postgresql://localhost:5432/RAGJava
spring.datasource.username=smurthy
spring.datasource.password=ide123Hosahaadu
spring.datasource.driver-class-name=org.postgresql.Driver

# OpenAI Configuration
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o-mini
spring.ai.openai.embedding.options.model=text-embedding-3-small

# Vector Store - Initialize schema for tests
spring.ai.vectorstore.pgvector.schema-name=public
spring.ai.vectorstore.pgvector.initialize-schema=false

# CRITICAL: Higher similarity threshold to prevent irrelevant document matches
# This forces the LLM to use function tools when documents don't match
spring.ai.vectorstore.pgvector.similarity-threshold=0.85

# CRITICAL: Conservative embedding settings to avoid rate limits
app.embedding.batch-size=10
app.embedding.delay-between-batches-ms=2000
app.embedding.max-tokens-per-batch=2000

# CRITICAL: Aggressive ingestion rate limiting for tests
app.ingestion.batch-size=10
app.ingestion.parallel-embeddings=2

# Set a dedicated watch directory for test documents
rag.documents.watch-dir=./target/test-docs-watch

# Logging
logging.level.org.apache.pdfbox.pdmodel.font.FileSystemFontProvider=ERROR
logging.level.com.smurthy.ai.rag=DEBUG

# Docker Compose - start only (don't stop after tests)
spring.docker.compose.lifecycle-management=start_only
